[{"/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/index.js":"1","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/reportWebVitals.js":"2","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/App.js":"3","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/components/Nav.js":"4","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/Resume.js":"5","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/About.js":"6","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/ProjectPage.js":"7","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/Dev.js":"8","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/projectsData.js":"9"},{"size":535,"mtime":1699370420538,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1699370420540,"results":"12","hashOfConfig":"11"},{"size":1140,"mtime":1699484535409,"results":"13","hashOfConfig":"11"},{"size":1172,"mtime":1699540160260,"results":"14","hashOfConfig":"11"},{"size":2601,"mtime":1699546736899,"results":"15","hashOfConfig":"11"},{"size":1783,"mtime":1699480482874,"results":"16","hashOfConfig":"11"},{"size":1066,"mtime":1699480464836,"results":"17","hashOfConfig":"11"},{"size":1378,"mtime":1699480476373,"results":"18","hashOfConfig":"11"},{"size":5236,"mtime":1699480252895,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sya80t",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/index.js",[],[],"/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/reportWebVitals.js",[],[],"/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/App.js",[],[],"/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/components/Nav.js",["51"],[],"import { NavLink } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport logo from '../img/logo.png'\nimport speechbubble from '../img/speechbubble.png'\n\nfunction Nav() {\n    const [showMessage, setShowMessage] = useState(false);\n\n    const handleMouseOver = () => {\n      setShowMessage(true);\n    };\n\n    const handleMouseOut = () => {\n      setShowMessage(false);\n    };\n\n    return (\n        <nav className=\"nav\">\n            <div onMouseOver={handleMouseOver} onMouseOut={handleMouseOut} className=\"logo-container\">\n                <img src={logo} className=\"logo-img\" alt=\"JD Logo\" />\n                {showMessage && <div className=\"message\"><img className=\"speechbubble\" src={speechbubble}/><h3 className=\"bubble-text\">Hi there</h3></div>}\n             </div>\n                  <h1 className=\"logo\">Julia Dearden</h1>\n            <div className=\"nav-links\">\n                <NavLink to=\"/\" className=\"nav-item\">About</NavLink>\n                <NavLink to=\"/projects\" className=\"nav-item\" >Projects</NavLink>\n                <NavLink to=\"/resume\" className=\"nav-item\">Resume</NavLink>\n            </div>\n        </nav>\n\n    )\n}\n\nexport default Nav;","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/Resume.js",["52","53","54","55"],[],"import resume from '../img/JD_Resume.jpg';\nimport github from '../img/github.png';\nimport email from '../img/email.png';\nimport linkedin from '../img/linkedin.png';\n\n\n\nfunction Resume() {\n    return (\n        <section className=\"resume\">\n            <div className=\"resume-column\">\n                <div className=\"resume-section\">\n                    <h1 className=\"resume-header\">Experience</h1>\n                    <p>Web Engineer II, <span className=\"orange\">Rapid7</span></p>\n                    <p>Web Engineer I, <span className=\"orange\">Rapid7</span></p>\n                    <p>Growth Strategy Rotational Program, <span className=\"orange\">Rapid7</span></p>\n                    <p>Product Management Intern, <span className=\"orange\">Cengage</span></p>\n                    <p>Graphic Designer, <span className=\"orange\">Freelance</span></p>\n                </div>\n                <div className=\"resume-section\">\n                <h1 className=\"resume-header\">Courses and Certifications</h1>\n                    <p>Frontend Development Certificate - <span className=\"orange\">Meta, Coursera</span></p>\n                    <p>Foundations of UX - <span className=\"orange\">Google, Coursera</span></p>\n                    <p>Web Development - <span className=\"orange\">John's Hopkins, Coursera</span></p>\n                </div>\n            </div>\n            <div className=\"resume-column\">\n                <div className=\"resume-section\">\n                    <h1 className=\"resume-header\">Stack</h1>\n                    <div className=\"stack-cubes\">\n                        <h4 className=\"stack\">HTML</h4>\n                        <h4 className=\"stack\">CSS</h4>\n                        <h4 className=\"stack\">SCSS</h4>\n                        <h4 className=\"stack\">Flexbox</h4>\n                        <h4 className=\"stack\">JavaScript</h4>\n                        <h4 className=\"stack\">React</h4>\n                        <h4 className=\"stack\">C#</h4>\n                        <h4 className=\"stack\">.NET</h4>\n                    </div>\n                </div>\n                <div className=\"resume-section\">\n                    <h1 className=\"resume-header\">Education</h1>\n                    <h3>B.A Computer Science, Connecticut College</h3>\n                    <h3>Ammerman Center for Arts and Tech, Connecticut College</h3>\n                </div>\n                <div className=\"resume-section\">\n                    <h1 className=\"resume-header\">Leadership</h1>\n                    <h3>Women Who Code, NYC</h3>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Resume;","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/About.js",["56","57","58","59"],[],"import JDPortrait from '../img/JD-portrait.png';\nimport github from '../img/github.png';\nimport email from '../img/email.png';\nimport linkedin from '../img/linkedin.png';\n\n\n\nfunction Home() {\n    return (\n        <section className=\"about\">\n            <div className=\"about-image\">\n                <img src={JDPortrait} loading=\"lazy\" alt=\"Photo of Julia Dearden\"/>\n            </div>\n            <div className=\"about-text\">\n                <h2 className=\"about-title\">Hi there, I'm Julia!</h2>\n                <h2 className=\"about-subtitle\">My drive is to create empathetic, human experiences within technology.</h2>\n                <p className=\"about-paragraph\">I have a strong, technical background that is complemented with a foundation of design-thinking skills. I am obsessed with asking <b className=\"green\">“Why?”</b> and keeping humans at the center of dev and design decisions. As a result of working in various technical, creative, and strategic positions, I am a cross-functional problem solver who is passionate about front-end engineering and product design.</p>\n                <h4 className=\"about-personal\">Other things I love: music, pilates, being outdoors, and painting!</h4>\n                <div className=\"link-container\">\n                    <a href=\"https://github.com/jdearden4/\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"icon\" src={github}/></a>\n                    <a href=\"mailto:jdearden44@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"icon\" src={email}/></a>\n                    <a href=\"https://www.linkedin.com/in/julia-dearden/\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"icon\" src={linkedin}/></a>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Home;","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/ProjectPage.js",["60"],[],"// ProjectPage.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction ProjectPage({ project }) {\nconst roundClassName = `project-type-single ${project.type === 'design' ? 'design' : 'dev'}`;\nconst linkEmpty = project.link === \"\" ? false : true;\n\n  return (\n\n    <div className=\"project-page\">\n        <div class=\"project-tile-single\">\n            <img className=\"project-img-single\" loading=\"lazy\" src={project.image} alt={project.title} />\n        </div>\n        <div className=\"project-tile-text\">\n            <h5 className=\"project-type\">{project.type}</h5>\n            <h3 className=\"project-title\">{project.title}</h3>\n            <h4>{project.stack}</h4>\n            <p className=\"project-desc\">{project.description}</p>\n            {linkEmpty && (\n          <a href={project.link}>\n            <h5 className=\"project-link\">View Project</h5>\n          </a>\n        )}\n        </div>\n        <Link className=\"cta-link\" to=\"/projects\"><h4 className=\"cta-text\">Back to Projects</h4></Link>\n    </div>\n  );\n}\n\nexport default ProjectPage;","/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/Dev.js",[],[],"/Users/juliadearden/Documents/GitHub/jdearden4.github.io/src/pages/projectsData.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":21,"column":58,"nodeType":"63","endLine":21,"endColumn":108},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":14},{"ruleId":"64","severity":1,"message":"68","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"69","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":13},{"ruleId":"64","severity":1,"message":"70","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":12,"column":17,"nodeType":"63","endLine":12,"endColumn":84},{"ruleId":"61","severity":1,"message":"62","line":20,"column":103,"nodeType":"63","endLine":20,"endColumn":139},{"ruleId":"61","severity":1,"message":"62","line":21,"column":101,"nodeType":"63","endLine":21,"endColumn":136},{"ruleId":"61","severity":1,"message":"62","line":22,"column":116,"nodeType":"63","endLine":22,"endColumn":154},{"ruleId":"64","severity":1,"message":"73","line":7,"column":7,"nodeType":"66","messageId":"67","endLine":7,"endColumn":21},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'resume' is defined but never used.","Identifier","unusedVar","'github' is defined but never used.","'email' is defined but never used.","'linkedin' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'roundClassName' is assigned a value but never used."]